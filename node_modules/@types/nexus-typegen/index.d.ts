/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import * as Context from "../../../backend/src/context"
import * as prisma from ".prisma/client"



declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  DateTimeFilter: { // input type
    equals?: any | null; // DateTime
    gt?: any | null; // DateTime
    gte?: any | null; // DateTime
    in?: any[] | null; // [DateTime!]
    lt?: any | null; // DateTime
    lte?: any | null; // DateTime
    not?: any | null; // DateTime
    notIn?: any[] | null; // [DateTime!]
  }
  FileFilter: { // input type
    every?: NexusGenInputs['FileWhereInput'] | null; // FileWhereInput
    none?: NexusGenInputs['FileWhereInput'] | null; // FileWhereInput
    some?: NexusGenInputs['FileWhereInput'] | null; // FileWhereInput
  }
  FileWhereInput: { // input type
    AND?: NexusGenInputs['FileWhereInput'][] | null; // [FileWhereInput!]
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    duration?: NexusGenInputs['IntFilter'] | null; // IntFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['FileWhereInput'][] | null; // [FileWhereInput!]
    OR?: NexusGenInputs['FileWhereInput'][] | null; // [FileWhereInput!]
    owner?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    ownerId?: NexusGenInputs['IntFilter'] | null; // IntFilter
    size?: NexusGenInputs['FloatFilter'] | null; // FloatFilter
    type?: NexusGenEnums['FileType'] | null; // FileType
    uuid?: NexusGenInputs['StringFilter'] | null; // StringFilter
  }
  FileWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  FloatFilter: { // input type
    equals?: number | null; // Float
    gt?: number | null; // Float
    gte?: number | null; // Float
    in?: number[] | null; // [Float!]
    lt?: number | null; // Float
    lte?: number | null; // Float
    not?: number | null; // Float
    notIn?: number[] | null; // [Float!]
  }
  IntFilter: { // input type
    equals?: number | null; // Int
    gt?: number | null; // Int
    gte?: number | null; // Int
    in?: number[] | null; // [Int!]
    lt?: number | null; // Int
    lte?: number | null; // Int
    not?: number | null; // Int
    notIn?: number[] | null; // [Int!]
  }
  StringFilter: { // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  }
  UserWhereInput: { // input type
    AND?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    country?: NexusGenInputs['StringFilter'] | null; // StringFilter
    createdAt?: NexusGenInputs['DateTimeFilter'] | null; // DateTimeFilter
    files?: NexusGenInputs['FileFilter'] | null; // FileFilter
    id?: NexusGenInputs['IntFilter'] | null; // IntFilter
    name?: NexusGenInputs['StringFilter'] | null; // StringFilter
    NOT?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
    OR?: NexusGenInputs['UserWhereInput'][] | null; // [UserWhereInput!]
  }
  UserWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
  FileType: prisma.FileType
}

export interface NexusGenRootTypes {
  File: prisma.File;
  FileTypeReport: { // root type
    fileType: NexusGenEnums['FileType']; // FileType!
    quantity: number; // Int!
    totalFiles: number; // Int!
  }
  Query: {};
  Report: { // root type
    averageFileDuration: number; // Float!
    averageFileSize: number; // Float!
    totalFiles: number; // Int!
  }
  User: prisma.User;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  DateTimeFilter: NexusGenInputs['DateTimeFilter'];
  FileFilter: NexusGenInputs['FileFilter'];
  FileWhereInput: NexusGenInputs['FileWhereInput'];
  FileWhereUniqueInput: NexusGenInputs['FileWhereUniqueInput'];
  FloatFilter: NexusGenInputs['FloatFilter'];
  IntFilter: NexusGenInputs['IntFilter'];
  StringFilter: NexusGenInputs['StringFilter'];
  UserWhereInput: NexusGenInputs['UserWhereInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  FileType: NexusGenEnums['FileType'];
}

export interface NexusGenFieldTypes {
  File: { // field return type
    duration: number; // Int!
    id: number; // Int!
    name: string; // String!
    owner: NexusGenRootTypes['User']; // User!
    size: number; // Float!
    type: NexusGenEnums['FileType']; // FileType!
    uuid: string; // String!
  }
  FileTypeReport: { // field return type
    fileType: NexusGenEnums['FileType']; // FileType!
    quantity: number; // Int!
    totalFiles: number; // Int!
  }
  Query: { // field return type
    file: NexusGenRootTypes['File'] | null; // File
    files: NexusGenRootTypes['File'][]; // [File!]!
    report: NexusGenRootTypes['Report']; // Report!
    reportFileType: NexusGenRootTypes['FileTypeReport']; // FileTypeReport!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Report: { // field return type
    averageFileDuration: number; // Float!
    averageFileSize: number; // Float!
    totalFiles: number; // Int!
  }
  User: { // field return type
    averageFileDuration: number | null; // Float
    averageFileSize: number | null; // Float
    country: string; // String!
    files: NexusGenRootTypes['File'][]; // [File!]!
    id: number; // Int!
    name: string; // String!
    totalFiles: number | null; // Int
  }
}

export interface NexusGenArgTypes {
  Query: {
    file: { // args
      where: NexusGenInputs['FileWhereUniqueInput']; // FileWhereUniqueInput!
    }
    files: { // args
      after?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      before?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      where?: NexusGenInputs['FileWhereInput'] | null; // FileWhereInput
    }
    reportFileType: { // args
      type: NexusGenEnums['FileType']; // FileType!
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      where?: NexusGenInputs['UserWhereInput'] | null; // UserWhereInput
    }
  }
  User: {
    files: { // args
      after?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      before?: NexusGenInputs['FileWhereUniqueInput'] | null; // FileWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "File" | "FileTypeReport" | "Query" | "Report" | "User";

export type NexusGenInputNames = "DateTimeFilter" | "FileFilter" | "FileWhereInput" | "FileWhereUniqueInput" | "FloatFilter" | "IntFilter" | "StringFilter" | "UserWhereInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = "FileType";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: Context.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}