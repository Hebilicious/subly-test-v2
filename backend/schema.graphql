### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: DateTime
  notIn: [DateTime!]
}

type File {
  createdAt: DateTime!
  duration: Int!
  id: Int!
  name: String!
  owner: User!
  size: Float!
  type: FileType!
  uuid: String!
}

input FileFilter {
  every: FileWhereInput
  none: FileWhereInput
  some: FileWhereInput
}

enum FileType {
  MP4
  WAV
}

type FileTypeReport {
  fileType: FileType!
  quantity: Int!
  totalFiles: Int!
}

input FileWhereInput {
  AND: [FileWhereInput!]
  createdAt: DateTimeFilter
  duration: IntFilter
  id: IntFilter
  name: StringFilter
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  owner: UserWhereInput
  ownerId: IntFilter
  size: FloatFilter
  type: FileType
  uuid: StringFilter
}

input FileWhereUniqueInput {
  id: Int
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: Float
  notIn: [Float!]
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: Int
  notIn: [Int!]
}

type Query {
  file(where: FileWhereUniqueInput!): File
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int, where: FileWhereInput): [File!]!
  report: Report!
  reportFileType(type: FileType!): FileTypeReport!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, where: UserWhereInput): [User!]!
}

type Report {
  averageFileDuration: Float!
  averageFileSize: Float!
  totalFiles: Int!
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: String
  notIn: [String!]
  startsWith: String
}

type User {
  averageFileDuration: Float
  averageFileSize: Float
  country: String!
  createdAt: DateTime!
  files(after: FileWhereUniqueInput, before: FileWhereUniqueInput, first: Int, last: Int): [File!]!
  id: Int!
  name: String!
  totalFiles: Int
}

input UserWhereInput {
  AND: [UserWhereInput!]
  country: StringFilter
  createdAt: DateTimeFilter
  files: FileFilter
  id: IntFilter
  name: StringFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: Int
}
